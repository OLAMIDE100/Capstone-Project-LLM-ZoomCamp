name: 'deployment_job'

on:
  push:
    branches:
     - "master"
    paths:
      - 'argocd/**'
      - 'infrastructure/**'
    

env:
  AWS_REGION: eu-central-1                                     
   

jobs:
  Cloud_Resources_Deployment:
    name: 'Cloud_Resources_Deployment'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3



    - name: Setup_terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup_aws_envirronment
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: cloud_infrastructure_deployment
      run: |
            bash script/deploy.sh
            
    - name: Setup_helm_environment
      run: |
            bash script/helm.sh

    - name: external_secrets_setup 
      run: |
            bash script/secret_manager.sh
            helm repo add external-secrets https://charts.external-secrets.io
            helm upgrade --install external-secrets external-secrets/external-secrets  -f  argocd/deployment_manifests/helm_values/secret_values.yaml

    - name: secret_store_setup 
      run: |
            bash script/namespace.sh
            kubectl apply -f argocd/deployment_manifests/secret/service_account.yaml
            kubectl apply -f  argocd/deployment_manifests/secret/secret-store.yml
            kubectl apply -f argocd/deployment_manifests/secret/argocd-aws-secret.yaml


    - name: argo_deployment_setup 
      run: |
            helm repo add argo https://argoproj.github.io/argo-helm
            helm upgrade --install argocd argo/argo-cd --version 7.5.2  -f argocd/deployment_manifests/helm_values/values.yaml --debug
            kubectl apply -f argocd/project_manifests/llm-project.yaml

    - name: llm_infra_support_setup
      run: |
            kubectl apply -f argocd/application_manifests/support.yaml

                

    - name: llm_elasticsearch_setup
      run: |
            kubectl apply -f argocd/application_manifests/elastic_search.yaml

    - name: llm_streamlit_grafana_setup
      run: |
            kubectl apply -f argocd/application_manifests/streamlit.yaml
            kubectl apply -f argocd/application_manifests/grafana.yaml


    